package org.labkey.immport;

import org.labkey.api.data.Container;
import org.labkey.api.module.ModuleLoader;
import org.labkey.api.query.ExportScriptModel;
import org.labkey.api.query.QueryView;
import org.labkey.api.query.RExportScriptFactory;
import org.labkey.api.query.RExportScriptModel;
import org.labkey.api.study.Study;
import org.labkey.api.study.StudyService;

import java.util.List;

public class ImmuneSpaceRExportScriptFactory extends RExportScriptFactory
{
    @Override
    public ExportScriptModel getModel(QueryView queryView)
    {
        return new ImmuneSpaceRExportScriptModel(queryView);
    }

    class ImmuneSpaceRExportScriptModel extends RExportScriptModel
    {
        public ImmuneSpaceRExportScriptModel(QueryView view)
        {
            super(view);
        }

        @Override
        public String getScriptExportText()
        {
            // the ImmuneSpaceR export script only applies to containers with the ImmPort module enabled and QueryViews that are study datasets
            Container container = getQueryView().getContainer();
            Study study = container != null ? StudyService.get().getStudy(container) : null;
            boolean isImmPortModuleEnabled = container != null && container.getActiveModules().contains(ModuleLoader.getInstance().getModule(ImmPortModule.class));
            boolean isStudyDataset = study != null && "study".equals(getSchemaName()) && study.getDatasetByName(getQueryName()) != null;
            if (!isImmPortModuleEnabled || !isStudyDataset)
                return super.getScriptExportText();

            StringBuilder sb = new StringBuilder();
            sb.append("## R Script generated by ").append(getInstallationName()).append(" on ").append(getCreatedOn()).append("\n");
            sb.append("#").append("\n");
            sb.append("# This script makes use of the RGLab/ImmuneSpaceR package.").append("\n");
            sb.append("# See https://github.com/RGLab/ImmuneSpaceR for more information.").append("\n");
            sb.append("\n");
            sb.append("library(ImmuneSpaceR)").append("\n");

            // the Rlabkey package is used to apply filters to the query
            List<String> filterExprs = getFilterExpressions();
            if (!filterExprs.isEmpty())
                sb.append("library(Rlabkey)").append("\n");
            sb.append("\n");

            // if we are not at the project, i.e. individual study container, use the study container name for the connection
            String noun = container.isProject() ? "project" : "study";
            if (container.isProject() && container.isDataspace())
                sb.append(noun).append(" <- CreateConnection(\"\")").append("\n");
            else
                sb.append(noun).append(" <- CreateConnection(\"").append(container.getName()).append("\")").append("\n");

            // use the Rlabkey makeFilter function for the colFilter parameter
            String colFilterStr = "";
            if (!filterExprs.isEmpty())
            {
                sb.append("colFilter <- ").append(getFilters()).append("\n");
                colFilterStr = ", colFilter = colFilter";
            }

            // use the ImmuneSpaceR getDataset function for the specified query/dataset name and apply any column filters
            sb.append("dataset <- ").append(noun).append("$getDataset(\"").append(getQueryName()).append("\"").append(colFilterStr).append(")");

            return sb.toString();
        }
    }
}
